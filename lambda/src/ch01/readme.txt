람다식 ( Lambda Expression ) ㅡ> 람다 표현식 
함수형 프로그래밍이다.

자바 : 객채 지향 프로그래밍 
기능을 수행하기 위해서 객체를 만들고 멤버변수, 메서드를 수행하게 코드를 설계한다. 

함수의 구현과 호출만으로 프로그래밍 방식을 지원하는 코딩 ㅡ> 함수형 프로그래밍
이것을 자바에서는 람다 표현식이라고 한다. 

함수형 프로그래밍 ( FP, Functional Programming )
: 순수함수( Pure Function )를 구현하고 호출함으로써 외부자료에 부수적인 영향을 주지 않도록 구현하는 방식
	= 즉, 매개변수만을 사용하여 만드는 함수를 순수함수라고 함
	
	
람다식 ㅡ> 실제로 많이 사용하는 표현식이다. 
코드는 간소화 되지만, 가독성은 떨어진다.
람다 표현식을 사용하기 위해서는 인터페이스에 추상메서드가 반드시 하나여야 한다. 
람다표현식으로 쓸 인터페이스에 @FunctionalInterface 를 달아주어서 문법적으로 오류가 남을 알려줘야 한다. 

	람다식 문법 
	익명함수 ㅡ> 람다식으로 발전 
	
		결론
		기본 OOP문법 : 인터페이스를 선언하여 익명 구현 객체로 만들어 사용
		람다 표현식 : 인터페이를 선언하여 람다 표현식으로 만들어 사용
	